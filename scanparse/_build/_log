### Starting build.
# Target: statxt.ml.depends, tags: { extension:ml, file:statxt.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules statxt.ml > statxt.ml.depends
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet }
ocamlc.opt -c -o ast.cmo ast.ml # cached
# Target: parser.mly, tags: { extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, parser, quiet }
ocamlyacc parser.mly # cached
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
ocamldep.opt -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet }
ocamlc.opt -c -o parser.cmi parser.mli # cached
# Target: scanner.mll, tags: { extension:mll, file:scanner.mll, lexer, ocaml, ocamllex, quiet }
ocamllex.opt -q scanner.mll # cached
# Target: scanner.ml.depends, tags: { extension:ml, file:scanner.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules scanner.ml > scanner.ml.depends # cached
# Target: scanner.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:scanner.cmo, file:scanner.ml, implem, ocaml, quiet }
ocamlc.opt -c -o scanner.cmo scanner.ml # cached
# Target: statxt.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:statxt.cmo, file:statxt.ml, implem, ocaml, quiet }
ocamlc.opt -c -o statxt.cmo statxt.ml
# Target: ast.cmx, tags: { compile, extension:cmx, extension:ml, file:ast.cmx, file:ast.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -o ast.cmx ast.ml # cached
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, quiet }
ocamldep.opt -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmx, tags: { compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -o parser.cmx parser.ml # cached
# Target: scanner.cmx, tags: { compile, extension:cmx, extension:ml, file:scanner.cmx, file:scanner.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -o scanner.cmx scanner.ml # cached
# Target: statxt.cmx, tags: { compile, extension:cmx, extension:ml, file:statxt.cmx, file:statxt.ml, implem, native, ocaml, quiet }
ocamlopt.opt -c -o statxt.cmx statxt.ml
# Target: statxt.native, tags: { dont_link_with, extension:native, file:statxt.native, link, native, ocaml, program, quiet }
ocamlopt.opt ast.cmx parser.cmx scanner.cmx statxt.cmx -o statxt.native
# Compilation successful.
